import { Platform } from "react-native";

const LABEL_COLOR = "#838383";
const INPUT_COLOR = "#434646";
const ERROR_COLOR = "#a94442";
const HELP_COLOR = "#999999";
const BORDER_COLOR = "#cccccc";
const DISABLED_COLOR = "#777777";
const DISABLED_BACKGROUND_COLOR = "#eeeeee";
const FONT_SIZE = 14;
const FONT_WEIGHT = "400";
const FONT_FAMILY = "Helvetica-Light"

const stylesheet = Object.freeze({
    fieldset: {
        flex: 1,
        backgroundColor: 'transparent'
    },
    // the style applied to the container of all inputs
    formGroup: {
        normal: {
        marginBottom: 10
        },
        error: {
        marginBottom: 10
        }
    },
    controlLabel: {
        normal: {
        color: LABEL_COLOR,
        fontSize: FONT_SIZE,
        marginBottom: 7,
        fontWeight: FONT_WEIGHT,
        fontFamily: FONT_FAMILY
        },
        // the style applied when a validation error occours
        error: {
        color: ERROR_COLOR,
        fontSize: FONT_SIZE,
        marginBottom: 7,
        fontWeight: FONT_WEIGHT,
        fontFamily: FONT_FAMILY
        }
    },
    helpBlock: {
        normal: {
        color: HELP_COLOR,
        fontSize: FONT_SIZE,
        marginBottom: 2
        },
        // the style applied when a validation error occours
        error: {
        color: HELP_COLOR,
        fontSize: FONT_SIZE,
        marginBottom: 2
        }
    },
    errorBlock: {
        fontSize: FONT_SIZE,
        marginBottom: 2,
        color: ERROR_COLOR
    },
    textboxView: {
        normal: {},
        error: {},
        notEditable: {}
    },
    textbox: {
        normal: {
        color: INPUT_COLOR,
        fontSize: FONT_SIZE,
        height: 36,
        paddingVertical: Platform.OS === "ios" ? 7 : 0,
        paddingHorizontal: -1,
        borderColor: BORDER_COLOR,
        borderBottomWidth: 1,
        marginBottom: 10

        },
        // the style applied when a validation error occours
        error: {
        color: INPUT_COLOR,
        fontSize: FONT_SIZE,
        height: 36,
        paddingVertical: Platform.OS === "ios" ? 7 : 0,
        paddingHorizontal: -1,
        borderColor: ERROR_COLOR,
        borderBottomWidth: 1,
        marginBottom: 10
        },
        // the style applied when the textbox is not editable
        notEditable: {
        fontSize: FONT_SIZE,
        height: 36,
        paddingVertical: Platform.OS === "ios" ? 7 : 0,
        paddingHorizontal: -1,
        borderRadius: 4,
        borderColor: BORDER_COLOR,
        borderWidth: 1,
        marginBottom: 10,
        color: DISABLED_COLOR,
        backgroundColor: DISABLED_BACKGROUND_COLOR
        }
    },
    checkbox: {
        normal: {
        marginBottom: 4
        },
        // the style applied when a validation error occours
        error: {
        marginBottom: 4
        }
    },
    pickerContainer: {
        normal: {
        marginBottom: 4,
        borderRadius: 20,
        borderColor: BORDER_COLOR,
        borderBottomWidth: 1,
        },
        error: {
        marginBottom: 4,
        borderRadius: 4,
        borderColor: ERROR_COLOR,
        borderBottomWidth: 1,
        },
        open: {
        // Alter styles when select container is open
        }
    },
    select: {
        normal: Platform.select({
        android: {
            paddingLeft: 7,
            color: INPUT_COLOR,

            //CUSTOMIZED STYLES
            borderBottomWidth: 1,
            /* backgroundColor: 'red', */

        },
        ios: {}
        }),
        // the style applied when a validation error occours
        error: Platform.select({
        android: {
            paddingLeft: 7,
            color: ERROR_COLOR
        },
        ios: {}
        })
    },
    pickerTouchable: {
        normal: {
        height: 44,
        flexDirection: "row",
        alignItems: "center",

        //CUSTOMIZED STYLES
        borderWidth: 1

        },
        error: {
        height: 44,
        flexDirection: "row",
        alignItems: "center",

        //CUSTOMIZED STYLES
        borderWidth: 1

        },
        active: {
        borderBottomWidth: 1,
        borderColor: BORDER_COLOR,

        //CUSTOMIZED STYLES
        borderWidth: 1
        }
    },
    pickerValue: {
        normal: {
        fontSize: FONT_SIZE,
        paddingLeft: -8,
        },
        error: {
        fontSize: FONT_SIZE,
        paddingLeft: -8,
        }
    },
    datepicker: {
        normal: {
        marginBottom: 4
        },
        // the style applied when a validation error occours
        error: {
        marginBottom: 4
        }
    },
    dateTouchable: {
        normal: {},
        error: {}
    },
    dateValue: {
        normal: {
        color: INPUT_COLOR,
        fontSize: FONT_SIZE,
        /* padding: 7, */
        paddingLeft: -7,
        paddingBottom: 7,
        marginBottom: 10,
        marginTop: 7,
        borderBottomWidth: 1,
        borderColor: BORDER_COLOR
        },
        error: {
        color: ERROR_COLOR,
        fontSize: FONT_SIZE,
        /* padding: 7, */
        paddingLeft: -7,
        paddingBottom: 7,
        marginBottom: 10,
        marginTop: 7,
        borderBottomWidth: 1,
        borderColor: BORDER_COLOR
        }
    },
    buttonText: {
        fontSize: 18,
        color: "white",
        alignSelf: "center"
    },
    button: {
        height: 36,
        backgroundColor: "#48BBEC",
        borderColor: "#48BBEC",
        borderWidth: 1,
        borderRadius: 8,
        marginBottom: 10,
        alignSelf: "stretch",
        justifyContent: "center"
    }
});

module.exports = stylesheet;